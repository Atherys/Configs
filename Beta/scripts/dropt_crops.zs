import mods.dropt.Dropt;
import mods.dropt.Harvester;
import crafttweaker.item.IItemStack;

//=========================================================================================//
//==================================== COTTON =============================================//
//=========================================================================================//
Dropt.list("crop_cotton")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["atherys:crop_cotton:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([cotton_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["atherys:crop_cotton:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([cotton])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(940))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50))
          .items([cotton_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(10))
          .items([flax_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["atherys:crop_cotton:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([cotton])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(880))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(100))
          .items([cotton_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(20))
          .items([flax_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["atherys:crop_cotton:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([cotton])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(820))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([cotton_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(30))
          .items([flax_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["atherys:crop_cotton:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([cotton])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(760))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([cotton_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(40))
          .items([flax_seeds])
      )
  );

//=========================================================================================//
//===================================== FLAX ==============================================//
//=========================================================================================//
Dropt.list("crop_flax")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_flax:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([flax_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_flax:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([flax])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(940))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50))
          .items([flax_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(10))
          .items([hemp_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_flax:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([flax])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(880))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(100))
          .items([flax_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(20))
          .items([hemp_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_flax:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 2))

      .addDrop(Dropt.drop()
      .force()
          .items([flax])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(820))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([flax_seeds])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(30))
          .items([hemp_seeds])
      )
  );

//=========================================================================================//
//===================================== HEMP ==============================================//
//=========================================================================================//
Dropt.list("crop_hemp")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_tobacco:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([hemp_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_tobacco:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
      .force()
          .items([hemp])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(940))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(60))
          .items([hemp_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_tobacco:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
      .force()
          .items([hemp])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(880))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(120))
          .items([hemp_seeds])
      )
  );

//=========================================================================================//
//===================================== WHEAT =============================================//
//=========================================================================================//
Dropt.list("crop_wheat")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:wheat:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([wheat_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["minecraft:wheat:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([wheat])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:wheat:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([wheat_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:wheat:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([wheat_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:wheat:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([wheat_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:wheat:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([wheat_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:wheat:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([wheat_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//===================================== BARLEY ============================================//
//=========================================================================================//
Dropt.list("crop_barley")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_barley:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([barley_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["conquest:crop_barley:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([barley])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_barley:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([barley_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_barley:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([barley_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_barley:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([barley_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_barley:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([barley_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_barley:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([barley_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//===================================== RICE ==============================================//
//=========================================================================================//
Dropt.list("crop_rice")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_rice:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([rice_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["conquest:crop_rice:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([rice_seeds])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_rice:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([rice_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_rice:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([rice_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_rice:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([rice_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_rice:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([rice_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_rice:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([rice_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//==================================== TURNIPS ============================================//
//=========================================================================================//
Dropt.list("crop_turnips")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_turnips:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([turnip_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["conquest:crop_turnips:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([turnip])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_turnips:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([turnip_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_turnips:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([turnip_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_turnips:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([turnip_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_turnips:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([turnip_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_turnips:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([turnip_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//==================================== CABBAGE ============================================//
//=========================================================================================//
Dropt.list("crop_cabbage")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_cabbage:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([cabbage_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["conquest:crop_cabbage:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([cabbage])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_cabbage:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([cabbage_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_cabbage:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([cabbage_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_cabbage:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([cabbage_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_cabbage:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([cabbage_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_cabbage:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([cabbage_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//==================================== LEGUMES ============================================//
//=========================================================================================//
Dropt.list("crop_legumes")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["conquest:crop_legumes:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([legume_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["conquest:crop_legumes:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([legumes])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_legumes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([legume_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_legumes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([legume_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_legumes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([legume_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_legumes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([legume_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["conquest:crop_legumes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([legume_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//==================================== CARROTS ============================================//
//=========================================================================================//
Dropt.list("crop_carrots")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:carrots:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([carrot])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["minecraft:carrots:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([carrot])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:carrots:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([carrot], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:carrots:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([carrot], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:carrots:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([carrot], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:carrots:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([carrot], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:carrots:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([carrot], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//=================================== POTATOES ============================================//
//=========================================================================================//
Dropt.list("crop_potatoes")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:potatoes:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([potato])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["minecraft:potatoes:7"])
      .addDrop(Dropt.drop()
      .force()
          .items([potato])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:potatoes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([potato], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:potatoes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([potato], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:potatoes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([potato], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:potatoes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([potato], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:potatoes:7"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([potato], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//==================================== BEETROOT ===========================================//
//=========================================================================================//
Dropt.list("crop_beetroot")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:beetroots:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([beetroot_seeds])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["minecraft:beetroots:3"])
      .addDrop(Dropt.drop()
      .force()
          .items([beetroot])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:beetroots:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,
            <atherys:hoe_t1:*>,
            <atherys:hoe_t2:*>,
            <atherys:hoe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([beetroot_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:beetroots:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([beetroot_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:beetroots:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([beetroot_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:beetroots:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([beetroot_seeds], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:beetroots:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([beetroot_seeds], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//====================================== MELON ============================================//
//=========================================================================================//
Dropt.list("crop_melon_stem")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:melon_stem:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([melon_seeds])
      )
  );

Dropt.list("melon_block")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:melon_block:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([melon], Dropt.range(2, 4))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:melon_block:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,<atherys:axe_t0:*>,
            <atherys:hoe_t1:*>,<atherys:axe_t1:*>,
            <atherys:hoe_t2:*>,<atherys:axe_t2:*>,
            <atherys:hoe_t3:*>,<atherys:axe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([melon], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:melon_block:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>,<atherys:axe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([melon], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:melon_block:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>,<atherys:axe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([melon], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:melon_block:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>,<atherys:axe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([melon], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:melon_block:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>,<atherys:axe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([melon], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//=================================== COCOA BEANS =========================================//
//=========================================================================================//
Dropt.list("cocoa_beans")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .fallthrough()
      .matchBlocks(["minecraft:cocoa:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([cocoa_beans])
      )
  )
  .add(Dropt.rule()
      .replaceStrategy("ADD")
      .fallthrough()
      .matchBlocks(["minecraft:cocoa:3"])
      .addDrop(Dropt.drop()
      .force()
          .items([cocoa_beans])
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:cocoa:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .mainHand("BLACKLIST", [
            <atherys:hoe_t0:*>,<atherys:axe_t0:*>,
            <atherys:hoe_t1:*>,<atherys:axe_t1:*>,
            <atherys:hoe_t2:*>,<atherys:axe_t2:*>,
            <atherys:hoe_t3:*>,<atherys:axe_t3:*>
          ]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(850))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(150))
          .items([cocoa_beans], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:cocoa:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t0:*>,<atherys:axe_t0:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))
      
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(800))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(200))
          .items([cocoa_beans], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:cocoa:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t1:*>,<atherys:axe_t1:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(750))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(250))
          .items([cocoa_beans], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:cocoa:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t2:*>,<atherys:axe_t2:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(700))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(300))
          .items([cocoa_beans], Dropt.range(1, 2))
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:cocoa:3"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("WHITELIST", [<atherys:hoe_t3:*>,<atherys:axe_t3:*>]))
      .dropStrategy("REPEAT")
      .dropCount(Dropt.range(0, 1))

      .addDrop(Dropt.drop()
          .selector(Dropt.weight(650))
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(350))
          .items([cocoa_beans], Dropt.range(1, 2))
      )
  );

//=========================================================================================//
//=================================== PUMPKIN =============================================//
//=========================================================================================//
Dropt.list("crop_pumpkin_stem")
  .add(Dropt.rule()
      .replaceStrategy("REPLACE_ALL")
      .matchBlocks(["minecraft:pumpkin_stem:*"])
      .addDrop(Dropt.drop()
      .force()
          .items([pumpkin_seeds])
      )
  );